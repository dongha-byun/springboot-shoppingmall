plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'springboot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	asciidoctorExt
}

repositories {
	mavenCentral()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// mail
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// RestAssured
	testImplementation 'io.rest-assured:rest-assured'

	implementation 'com.google.guava:guava:31.1-jre'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// h2
	runtimeOnly 'com.h2database:h2'

	// mysql
	implementation 'mysql:mysql-connector-java'

	// RestDoc
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor(
			"javax.persistence:javax.persistence-api",
			"javax.annotation:javax.annotation-api",
			"com.querydsl:querydsl-apt:5.0.0:jpa"
	)

	// spring webFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'src/main/resources/static/docs'
	}
}

// QueryDSL 적용, 자동 생성된 Q 클래스 gradle 로 clean 처리
clean {
	delete file('src/main/generated')
}
